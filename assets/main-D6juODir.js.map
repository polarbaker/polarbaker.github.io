{"version":3,"file":"main-D6juODir.js","sources":["../../src/js/main.js"],"sourcesContent":["import * as THREE from 'https://unpkg.com/three@0.159.0/build/three.module.js';\nimport { OrbitControls } from 'https://unpkg.com/three@0.159.0/examples/jsm/controls/OrbitControls.js';\n\nclass EarthScene {\n  constructor() {\n    // Create canvas if it doesn't exist\n    this.canvas = document.querySelector('#earth-canvas');\n    if (!this.canvas) {\n      this.canvas = document.createElement('canvas');\n      this.canvas.id = 'earth-canvas';\n      document.body.insertBefore(this.canvas, document.body.firstChild);\n    }\n\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvas,\n      antialias: true,\n      alpha: true,\n      powerPreference: \"high-performance\"\n    });\n\n    this.controls = null;\n    this.earth = null;\n    this.stars = null;\n    this.textureLoader = new THREE.TextureLoader();\n    this.textureLoader.setPath('/ThomasBakerTechPortfolio/textures/');\n\n    // Initialize scene\n    this.init();\n  }\n\n  init() {\n    // Setup renderer\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    this.renderer.setClearColor(0x000000, 0);\n\n    // Setup camera\n    this.camera.position.z = 5;\n\n    // Setup controls\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.controls.enableDamping = true;\n    this.controls.dampingFactor = 0.05;\n    this.controls.rotateSpeed = 0.5;\n    this.controls.enableZoom = false;\n\n    // Create Earth\n    this.createEarth();\n    \n    // Create stars\n    this.createStars();\n\n    // Add ambient light\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    this.scene.add(ambientLight);\n\n    // Add directional light\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 3, 5);\n    this.scene.add(directionalLight);\n\n    // Handle window resize\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n\n    // Start animation loop\n    this.animate();\n  }\n\n  createEarth() {\n    // Earth geometry\n    const geometry = new THREE.SphereGeometry(2, 64, 64);\n    \n    // Load Earth textures with error handling\n    const loadTexture = (name) => {\n      return new Promise((resolve) => {\n        this.textureLoader.load(\n          name,\n          (texture) => resolve(texture),\n          undefined,\n          () => {\n            console.warn(`Failed to load texture: ${name}`);\n            resolve(null);\n          }\n        );\n      });\n    };\n\n    // Load all textures\n    Promise.all([\n      loadTexture('earth_daymap.jpg'),\n      loadTexture('earth_normal.jpg'),\n      loadTexture('earth_specular.jpg')\n    ]).then(([dayMap, normalMap, specularMap]) => {\n      // Earth material with textures\n      const material = new THREE.MeshPhongMaterial({\n        map: dayMap,\n        normalMap: normalMap,\n        specularMap: specularMap,\n        normalScale: new THREE.Vector2(0.5, 0.5),\n        shininess: 25\n      });\n\n      this.earth = new THREE.Mesh(geometry, material);\n      \n      // Add atmosphere\n      const atmosphereGeometry = new THREE.SphereGeometry(2.1, 64, 64);\n      const atmosphereMaterial = new THREE.MeshPhongMaterial({\n        color: 0x0077ff,\n        transparent: true,\n        opacity: 0.2,\n        side: THREE.BackSide\n      });\n      const atmosphere = new THREE.Mesh(atmosphereGeometry, atmosphereMaterial);\n      \n      // Create a group for Earth and atmosphere\n      this.earthGroup = new THREE.Group();\n      this.earthGroup.add(this.earth);\n      this.earthGroup.add(atmosphere);\n      \n      // Tilt Earth's axis (23.5 degrees)\n      this.earthGroup.rotation.z = THREE.MathUtils.degToRad(23.5);\n      \n      this.scene.add(this.earthGroup);\n    });\n  }\n\n  createStars() {\n    const starsGeometry = new THREE.BufferGeometry();\n    const starsMaterial = new THREE.PointsMaterial({\n      color: 0xFFFFFF,\n      size: 0.1,\n      transparent: true\n    });\n\n    const starsVertices = [];\n    for (let i = 0; i < 10000; i++) {\n      const x = (Math.random() - 0.5) * 2000;\n      const y = (Math.random() - 0.5) * 2000;\n      const z = -Math.random() * 2000;\n      starsVertices.push(x, y, z);\n    }\n\n    starsGeometry.setAttribute('position', new THREE.Float32BufferAttribute(starsVertices, 3));\n    this.stars = new THREE.Points(starsGeometry, starsMaterial);\n    this.scene.add(this.stars);\n  }\n\n  onWindowResize() {\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n\n  animate() {\n    requestAnimationFrame(this.animate.bind(this));\n\n    // Rotate Earth\n    if (this.earthGroup) {\n      this.earthGroup.rotation.y += 0.001;\n    }\n\n    // Update controls\n    this.controls.update();\n\n    // Render scene\n    this.renderer.render(this.scene, this.camera);\n  }\n}\n\n// Initialize when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Ensure WebGL is available\n  if (!window.WebGLRenderingContext) {\n    console.error('WebGL is not available in your browser');\n    return;\n  }\n\n  try {\n    new EarthScene();\n  } catch (error) {\n    console.error('Error initializing Earth scene:', error);\n  }\n});"],"names":["EarthScene","THREE","OrbitControls","ambientLight","directionalLight","geometry","loadTexture","name","resolve","texture","dayMap","normalMap","specularMap","material","atmosphereGeometry","atmosphereMaterial","atmosphere","starsGeometry","starsMaterial","starsVertices","i","x","y","z","error"],"mappings":"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"}