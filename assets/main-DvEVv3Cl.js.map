{"version":3,"file":"main-DvEVv3Cl.js","sources":["../../src/js/main.js"],"sourcesContent":["class EarthScene {\n  constructor() {\n    // Create canvas if it doesn't exist\n    this.canvas = document.querySelector('#earth-canvas');\n    if (!this.canvas) {\n      this.canvas = document.createElement('canvas');\n      this.canvas.id = 'earth-canvas';\n      document.body.insertBefore(this.canvas, document.body.firstChild);\n    }\n\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvas,\n      antialias: true,\n      alpha: true,\n      powerPreference: \"high-performance\"\n    });\n\n    this.controls = null;\n    this.earth = null;\n    this.stars = null;\n    this.textureLoader = new THREE.TextureLoader();\n\n    // Initialize scene\n    this.init();\n  }\n\n  init() {\n    console.log('Initializing Earth scene...');\n    // Setup renderer\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n    this.renderer.setClearColor(0x000000, 0);\n\n    // Setup camera\n    this.camera.position.z = 5;\n\n    // Setup controls\n    this.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement);\n    this.controls.enableDamping = true;\n    this.controls.dampingFactor = 0.05;\n    this.controls.rotateSpeed = 0.5;\n    this.controls.enableZoom = false;\n\n    // Create Earth\n    this.createEarth();\n    \n    // Create stars\n    this.createStars();\n\n    // Add ambient light\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    this.scene.add(ambientLight);\n\n    // Add directional light\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 3, 5);\n    this.scene.add(directionalLight);\n\n    // Handle window resize\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n\n    // Start animation loop\n    this.animate();\n    console.log('Earth scene initialized');\n  }\n\n  createEarth() {\n    console.log('Creating Earth...');\n    // Earth geometry\n    const geometry = new THREE.SphereGeometry(2, 64, 64);\n    \n    // Basic material for testing\n    const material = new THREE.MeshPhongMaterial({\n      color: 0x2233ff,\n      shininess: 25\n    });\n\n    this.earth = new THREE.Mesh(geometry, material);\n    \n    // Add atmosphere\n    const atmosphereGeometry = new THREE.SphereGeometry(2.1, 64, 64);\n    const atmosphereMaterial = new THREE.MeshPhongMaterial({\n      color: 0x0077ff,\n      transparent: true,\n      opacity: 0.2,\n      side: THREE.BackSide\n    });\n    const atmosphere = new THREE.Mesh(atmosphereGeometry, atmosphereMaterial);\n    \n    // Create a group for Earth and atmosphere\n    this.earthGroup = new THREE.Group();\n    this.earthGroup.add(this.earth);\n    this.earthGroup.add(atmosphere);\n    \n    // Tilt Earth's axis (23.5 degrees)\n    this.earthGroup.rotation.z = THREE.MathUtils.degToRad(23.5);\n    \n    this.scene.add(this.earthGroup);\n    console.log('Earth created and added to scene');\n  }\n\n  createStars() {\n    console.log('Creating stars...');\n    const starsGeometry = new THREE.BufferGeometry();\n    const starsMaterial = new THREE.PointsMaterial({\n      color: 0xFFFFFF,\n      size: 0.1,\n      transparent: true\n    });\n\n    const starsVertices = [];\n    for (let i = 0; i < 10000; i++) {\n      const x = (Math.random() - 0.5) * 2000;\n      const y = (Math.random() - 0.5) * 2000;\n      const z = -Math.random() * 2000;\n      starsVertices.push(x, y, z);\n    }\n\n    starsGeometry.setAttribute('position', new THREE.Float32BufferAttribute(starsVertices, 3));\n    this.stars = new THREE.Points(starsGeometry, starsMaterial);\n    this.scene.add(this.stars);\n    console.log('Stars created and added to scene');\n  }\n\n  onWindowResize() {\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n\n  animate() {\n    requestAnimationFrame(this.animate.bind(this));\n\n    // Rotate Earth\n    if (this.earthGroup) {\n      this.earthGroup.rotation.y += 0.001;\n    }\n\n    // Update controls\n    this.controls.update();\n\n    // Render scene\n    this.renderer.render(this.scene, this.camera);\n  }\n}\n\n// Initialize when THREE is available\nconsole.log('Checking for THREE...');\nif (window.THREE) {\n  console.log('THREE found, initializing scene...');\n  new EarthScene();\n} else {\n  console.error('THREE not found. Make sure Three.js is loaded.');\n}"],"names":["EarthScene","ambientLight","directionalLight","geometry","material","atmosphereGeometry","atmosphereMaterial","atmosphere","starsGeometry","starsMaterial","starsVertices","i","x","y","z"],"mappings":"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"}